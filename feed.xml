<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://ecustom.ca/</id>
  <title>Lucas Cherkewski</title>
  <updated>2013-07-16T03:00:00Z</updated>
  <link rel="alternate" href="http://ecustom.ca/"/>
  <link rel="self" href="http://ecustom.ca/feed.xml"/>
  <author>
    <name>Lucas Cherkewski</name>
    <uri>http://ecustom.ca</uri>
  </author>
  <entry>
    <id>tag:ecustom.ca,2013-07-15:/articles/write-in-the-open/</id>
    <title type="html">Write in the Open</title>
    <published>2013-07-16T03:00:00Z</published>
    <updated>2013-07-16T03:00:00Z</updated>
    <link rel="alternate" href="http://ecustom.ca/articles/write-in-the-open/"/>
    <content type="html">&lt;p class="article-intro"&gt;
I do all my writing in the open. Anyone can view what I'm working on, the ugly drafts and the stupid ideas, at any time. This rocks.
&lt;/p&gt;

&lt;p&gt;How do I write in the open? For those adventurous few who want to delve into my site’s &lt;a href="https://github.com/asdfgh746/ecustom.ca"&gt;GitHub repo&lt;/a&gt;, they can see all the writing I have. They can see the finished articles, the drafts, and the discarded but never deleted ideas. It’s all there.&lt;/p&gt;

&lt;h2 id="be-accountable"&gt;Be accountable&lt;/h2&gt;

&lt;p&gt;By writing in the open, I’m accountable. I know that someone could be reading my work long before it’s available, so I have to make it top-notch. Not only that, but I know that they could be looking at my work from months ago, which pushes me to make better content that outshines that writing.&lt;/p&gt;

&lt;p&gt;They can see that I have works which are still not published, and that I haven’t seen fit to delete it yet. I’m accountable to the people who see my writing sitting unpublished, because they know I have unfinished work. I don’t like having unfinished work, so it pushes me to finish it.&lt;/p&gt;

&lt;h2 id="be-transparent"&gt;Be transparent&lt;/h2&gt;

&lt;p&gt;By writing in the open, I can give sneak peeks. People see my work before it’s unpublished, and they get a chance to look at my process. They can see the work evolve by looking at the piece’s history. For example, I recently broke out a section of a larger essay I was writing into its own article, which ended up being my piece about &lt;a href="http://bit.ly/17hhiLk"&gt;my writing workflow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Opening the veil like this allows people to see some of my thought process. They can watch the evolution of my thoughts and learn more about me along the way.&lt;/p&gt;

&lt;p&gt;Transparency is great, because it builds &lt;em&gt;trust&lt;/em&gt;. And having people who trust you is an awesome thing.&lt;/p&gt;

&lt;h2 id="be-bold"&gt;Be bold&lt;/h2&gt;

&lt;p&gt;Go ahead, put your unfinished work out there. Be bold, be confident. Don’t be afraid of what it might say about you. Do it often enough, and it’ll be a part of who you are, and people will come to respect and value you for it.&lt;/p&gt;

&lt;p&gt;I look forward to seeing your unfinished work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; Want to see &lt;em&gt;my&lt;/em&gt; latest unfinished work? You can read my aforementioned &lt;a href="http://bit.ly/13qPwrn"&gt;essay on writing&lt;/a&gt;. If you have some thoughts on it, I’d love to &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#108;&amp;#117;&amp;#099;&amp;#097;&amp;#115;&amp;#064;&amp;#101;&amp;#099;&amp;#117;&amp;#115;&amp;#116;&amp;#111;&amp;#109;&amp;#046;&amp;#099;&amp;#097;"&gt;hear them&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:ecustom.ca,2013-07-15:/articles/my-writing-workflow/</id>
    <title type="html">My writing workflow</title>
    <published>2013-07-15T04:00:00Z</published>
    <updated>2013-07-15T04:00:00Z</updated>
    <link rel="alternate" href="http://ecustom.ca/articles/my-writing-workflow/"/>
    <content type="html">&lt;p class="article-intro"&gt;
My writing workflow has evolved considerably over the past few years, going from zero in 2010, to where I am today. This evolution is largely due to the changing tools I use to publish and promote my writing, in addition to the type of writing I try to put out.
&lt;/p&gt;

&lt;p&gt;Let’s take a look at the writing workflow I use, before diving into some of the issues with it and then considering what features of the process I enjoy.&lt;/p&gt;

&lt;h2 id="the-workflow"&gt;The workflow&lt;/h2&gt;

&lt;p&gt;This workflow is what brings me from initial idea conception to publishing. All pieces of writing I publish go through this process, or the majority of it.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;An idea comes to me. This could be in the shower, on the bus, or late at night as I toss and turn.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I write my idea down. The idea gets stored in whatever medium is convenient at the time, whether it’s my Moleskine that I carry around, or in Google Keep, or on the back of my hand.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If I have time, I start fleshing out further thoughts around the idea. This usually manifests itself in random sentences which represent the core thoughts I wish to share.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Later, I’ll return to my ideas and start writing in a large notebook or typing my thoughts on my trusty &lt;a href="https://en.wikipedia.org/wiki/ThinkPad_T_Series"&gt;Thinkpad T42&lt;/a&gt; (I use it almost exclusively for writing, because the keyboard is so damn good). This step is the one that often causes trouble for me, because the thoughts and inspiration surrounding me when I originally had the idea are no longer present, so I have much difficulty in writing my idea out in a way that befits my original passion.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’ll then edit my writing, usually by passing it off to a friend and then reading it over myself.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Next, I’ll publish the piece. Almost all my writing is published on this website, while I also decide to cross-publish some of the pieces on &lt;a href="https://medium.com"&gt;Medium&lt;/a&gt;. This publishing step has a deceptive number of substeps if I’m publishing to my site, due to the way my publishing system is set up. More on that later.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally, I’ll start promoting the piece on &lt;a href="https://twitter.com/lchski"&gt;Twitter&lt;/a&gt;, Facebook, and by word of mouth (yep, that’s still a useful method in our online world).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This process works okay (it’s resulting in this article, isn’t it?); but it doesn’t allow for some things which I consider very useful from writing workflows.&lt;/p&gt;

&lt;h2 id="issues"&gt;Issues&lt;/h2&gt;

&lt;p&gt;Let’s look at some of the issues with this workflow:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;This system isn’t very good at &lt;em&gt;sharing ideas&lt;/em&gt;. There’s no incentive for people to share, and there’s no built in large audience who will read my work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This system doesn’t allow for actually writing and publishing the entire article from anywhere. I’m still tied down to using a computer with specialized software to publish my pieces.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The idea can go cold. This ties into the previous point. Because I can’t write my entire article and then share it from anywhere, I’m limited in my “window of passion.” I have to make the most of very limited tools to write down my thoughts once I come upon an idea, and that often isn’t enough to craft a good piece of art before the idea disappears from my mind.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The actual publishing process (step 6) is a major pain.&lt;/p&gt;

    &lt;p&gt;When I publish something, I have to first format the file in Markdown using a special header to provide the article metadata. Then, I have to commit it to git, and push it to my &lt;a href="https://github.com/asdfgh746/ecustom.ca"&gt;GitHub repo for this website&lt;/a&gt;. Then, I have to rebuild the site using nanoc, commit the results of that to git repo and push that repo to &lt;a href="https://github.com/asdfgh746/ecustom.ca-output"&gt;Github&lt;/a&gt;. Finally, I have to SSH into my web server and &lt;code&gt;git pull&lt;/code&gt; the repo back down from GitHub.&lt;/p&gt;

    &lt;p&gt;Now, this is largely self-inflicted due to my insistence on using &lt;a href="http://nanoc.ws"&gt;nanoc&lt;/a&gt; to publish instead of a dynamic system like &lt;a href="http://wordpress.org"&gt;WordPress&lt;/a&gt;; but it helps to illustrate the point that a good writing process, and thus a good writing system, should be easy to publish from.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These pains are all either self-inflicted, or pains that exist with most publishing systems or writing workflows. They’re largely unavoidable, thanks to the nature of the tools available and what we expect to receive from them.&lt;/p&gt;

&lt;h2 id="nice-bits"&gt;Nice bits&lt;/h2&gt;

&lt;p&gt;My process does allow for a few niceties, though, which other systems do not:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I have control over the location of all my content, and can access it at any time. Because my content resides entirely in either: (a) sheets of paper in my notebooks, or (b) plaintext files on my computers, I control where it is. I don’t have to worry about exporting it from a company who may or may not allow that in the future… I already have it with me.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I have control over the presentation. Good ideas require good presentation to accompany them, in order to best &lt;em&gt;communicate&lt;/em&gt; them to their audience. Great ideas can be communicated via unstyled HTML just fine, but we’ve come to expect a higher quality from the information we read today.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both of these points illustrate what I think is an important trait to value in writing systems — control. Important to me, my system allows the control of my writing to reside in my hands, and mine alone. Although I store my files on GitHub or on my web server, I still have complete copies of the git repositories on all my local machines, ready for the day I have to abandon those services.&lt;/p&gt;

&lt;h2 id="in-short"&gt;In short&lt;/h2&gt;

&lt;p&gt;My writing system is a bit janky, but it allows for me to, in a reasonable manner, come up with an idea, store it for later, revisit it and write it up, then publish it, without too much pain. Would it be easier if I moved parts of it to use a more dynamic publishing system, like WordPress? Perhaps.&lt;/p&gt;

&lt;p&gt;What’s important to take away from this piece, though, is that what works for writing is what works for you. My system is far from perfect, or even ideal, and I will always be tweaking it to be better. However, it works for me in its current state.&lt;/p&gt;

&lt;p&gt;And after all, isn’t it true that all we want to do is share our ideas with the rest of the world? If your system can do that, I think it’s the right one for you.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:ecustom.ca,2013-07-06:/articles/professional-wordpress-deployment-rami-sayar/</id>
    <title type="html">WordCamp Montr&amp;eacute;al: Professional WordPress Deployment</title>
    <published>2013-07-07T02:00:00Z</published>
    <updated>2013-07-07T02:00:00Z</updated>
    <link rel="alternate" href="http://ecustom.ca/articles/professional-wordpress-deployment-rami-sayar/"/>
    <content type="html">
&lt;p class="article-intro"&gt;
At WordCamp Montréal 2013, &lt;a href="https://twitter.com/ramisayar"&gt;Rami Sayar&lt;/a&gt; talked about moving from a developed product to a deployed one. &lt;a href="http://slid.es/sayar/prowp"&gt;Slides&lt;/a&gt;. Here are my notes:
&lt;/p&gt;

&lt;h2 id="professional-software"&gt;Professional software&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;High-availability, very reliable, being maintained and kept up-to-date continuously.&lt;/li&gt;
  &lt;li&gt;Managed releases - they’re tested, and it’s clear what changes are being sent out.&lt;/li&gt;
  &lt;li&gt;Only a select few can access production and deploy there.&lt;/li&gt;
  &lt;li&gt;Uses a consistent, versioned, automated software stack so that software is guaranteed to work across environments.&lt;/li&gt;
  &lt;li&gt;Uses automated deployment to go quickly, without downtime.&lt;/li&gt;
  &lt;li&gt;Software is auditable, with quality logs dating far back.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="world-class-frontends-need-world-class-backends"&gt;“World-class frontends need world-class backends”&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Developer operations (devops) has to be everywhere throughout development.&lt;/li&gt;
  &lt;li&gt;Check out &lt;a href="http://prowp.org/"&gt;ProWP.org&lt;/a&gt; for devops resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="git"&gt;Git&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Use submodules to track and manage histories separately.&lt;/li&gt;
  &lt;li&gt;Don’t clone WordPress, fork it then use it as the upstream repo. This allows you to get new changes from WordPress as they come.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="vagrantpackerio-for-machine-images"&gt;Vagrant/Packer.io for machine images&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Vagrant is a tool to &lt;em&gt;describe&lt;/em&gt; a virtual machine.&lt;/li&gt;
  &lt;li&gt;Vagrantpress is an Ubuntu Vagrant machine which is already setup with WordPress included.&lt;/li&gt;
  &lt;li&gt;Packer.io allows building identical cross-platform images.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="chefpuppet"&gt;Chef/Puppet&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Chef and Puppet are two similar tools to allow for configuration file deployment.&lt;/li&gt;
  &lt;li&gt;Chef is better for multi-server deployments (as it requires a lead server which others get config instructions from), whilst Puppet is better for single-server or a very limited number of servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="miscellany"&gt;Miscellany&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;WP-CLI allows for the creation and control of WordPress installations using the command line.&lt;/li&gt;
  &lt;li&gt;For open-source projects, use a tool such as Travis CI or Jenkins for testing.&lt;/li&gt;
  &lt;li&gt;New Relic is a good tool for server monitoring, while Nagios is a good open source alternative.&lt;/li&gt;
  &lt;li&gt;When performing host migrations, employ a code freeze as well as a content freeze (at least, do so for staging).&lt;/li&gt;
  &lt;li&gt;memcached + batcache are a powerful combination for caching.&lt;/li&gt;
  &lt;li&gt;The Automattic Developer plugin provides tons of great plugins for development purposes.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <id>tag:ecustom.ca,2013-07-06:/articles/build-a-website-on-the-moon-sarah-semark/</id>
    <title type="html">WordCamp Montr&amp;eacute;al: Build a Website on the Moon: WordPress Development from Anywhere</title>
    <published>2013-07-07T01:30:00Z</published>
    <updated>2013-07-07T01:30:00Z</updated>
    <link rel="alternate" href="http://ecustom.ca/articles/build-a-website-on-the-moon-sarah-semark/"/>
    <content type="html">
&lt;p class="article-intro"&gt;
At WordCamp Montréal 2013, &lt;a href="https://twitter.com/sarahsemark"&gt;Sarah Semark&lt;/a&gt; talked about how to develop WordPress sites from just about anywhere. &lt;a href="http://triggersandsparks.com/talks/moon"&gt;Slides&lt;/a&gt;. Here are my notes:
&lt;/p&gt;

&lt;h2 id="why-local-development-rocks"&gt;Why local development rocks&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Faster development - no need to wait for uploads.&lt;/li&gt;
  &lt;li&gt;Better testing - change all the file without affecting production.&lt;/li&gt;
  &lt;li&gt;Version control - keep a revision history using git.&lt;/li&gt;
  &lt;li&gt;A nicer production server - it’s more stable, with less downtime and outages.&lt;/li&gt;
  &lt;li&gt;Collaboration - can work better because you don’t have two people editing the same files.&lt;/li&gt;
  &lt;li&gt;Deployment - can automate deployment, getting rid of a lot of human error.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="tools"&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Use an XAMP stack (Operating system, Apache, MySQL, PHP) for your server.&lt;/li&gt;
  &lt;li&gt;Git for version control.&lt;/li&gt;
  &lt;li&gt;Automation scripts to sync your database changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="xamp"&gt;XAMP&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Set up your virtual hosts, allowing multiple sites, each with their own “domain” (can use something like wallybills.dev).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="git"&gt;Git&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;A very fast system to track changes.&lt;/li&gt;
  &lt;li&gt;Use your remote, or staging, location (like GitHub or BitBucket) to solve conflicts, not production.&lt;/li&gt;
  &lt;li&gt;Setup your &lt;code&gt;.gitignore&lt;/code&gt; file to ignore &lt;code&gt;wp-config.php&lt;/code&gt;, all machine-specific files, and &lt;em&gt;anything with sensitive data&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;On production, keep your &lt;code&gt;.git/&lt;/code&gt; folder one level above your web root (&lt;code&gt;public_html/&lt;/code&gt;, or &lt;code&gt;www/&lt;/code&gt;, or similar).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="database-automation"&gt;Database automation&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Keep all your site data in sync when you make file changes. (Sarah has some files &lt;a href="https://gist.github.com/sarahsemark/5889465"&gt;on GitHub Gist&lt;/a&gt; to help you out here.)&lt;/li&gt;
  &lt;li&gt;Pull data down from production to your local machine so you have real content created by clients to style.&lt;/li&gt;
  &lt;li&gt;Don’t use PHPMyAdmin to sync. Automate it.&lt;/li&gt;
  &lt;li&gt;Keep the table prefix the same between local and production, for simplicity’s sake.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="security"&gt;Security&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Keep the &lt;code&gt;.git&lt;/code&gt; folder out of the web root.&lt;/li&gt;
  &lt;li&gt;No sensitive files in the web root.&lt;/li&gt;
  &lt;li&gt;You can move &lt;code&gt;wp-config.php&lt;/code&gt; up one level from the WordPress install location, and WordPress will still find it.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <id>tag:ecustom.ca,2013-07-06:/articles/plugins-a-double-edged-sword-yannick-lefebvre/</id>
    <title type="html">WordCamp Montr&amp;eacute;al: Plugins: A Double-Edged Sword</title>
    <published>2013-07-07T01:00:00Z</published>
    <updated>2013-07-07T01:00:00Z</updated>
    <link rel="alternate" href="http://ecustom.ca/articles/plugins-a-double-edged-sword-yannick-lefebvre/"/>
    <content type="html">
&lt;p class="article-intro"&gt;
At WordCamp Montréal 2013, &lt;a href="https://twitter.com/ylefebvre"&gt;Yannick Lefebvre&lt;/a&gt; talked about WordPress plugins from a user/integrator perspective. &lt;a href="http://ylefebvre.ca/wcmtl13"&gt;Slides&lt;/a&gt;. Here are my notes:
&lt;/p&gt;

&lt;h2 id="things-to-check-before-using-a-plugin"&gt;Things to check before using a plugin&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Compatability - does it work for your version?&lt;/li&gt;
  &lt;li&gt;# of Downloads - higher counts are generally a good indicator.&lt;/li&gt;
  &lt;li&gt;Ratings - take with a grain of salt, because anyone can vote.&lt;/li&gt;
  &lt;li&gt;# of Resolved Threads - doesn’t take into account support delivered outside of WordPress.org. Some developers use their own forums for support, and are very active there.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="things-to-do-before-deploying-a-3suprdsup-party-plugin"&gt;Things to do before deploying a 3&lt;sup&gt;rd&lt;/sup&gt;-party plugin&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Check render time before installing it, and then check after. Check both the front and back end. Are the load times acceptable? &lt;em&gt;Lucas’ note: if your plugin provides a feature only used on select pages (e.g. a shortcode), make sure to check the performance of&lt;/em&gt; those &lt;em&gt;pages especially.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Log out and view the site as a regular user. Does it still work?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="troubleshooting-a-faulty-plugin"&gt;Troubleshooting a faulty plugin&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Deactivate the last plugin installed.&lt;/li&gt;
  &lt;li&gt;Deactivate &lt;em&gt;all&lt;/em&gt; plugins and activate each one again, one at a time. Refresh your site each time, see when it breaks.&lt;/li&gt;
  &lt;li&gt;Read the plugin page, check for install instructions you may have missed.&lt;/li&gt;
  &lt;li&gt;Contact the author if all else fails and you absolutely need the plugin to work.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="style-issues"&gt;Style issues&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Conflicting styles between the plugin’s styles and yours, or one plugin’s styles and another.&lt;/li&gt;
  &lt;li&gt;Use the inspector to find the “winning styles.”&lt;/li&gt;
  &lt;li&gt;Can modify the theme to fix these issues. &lt;code&gt;!important&lt;/code&gt; can come in handy here.&lt;/li&gt;
  &lt;li&gt;Can modify the plugin, but make sure to backup the files first and know that your changes will be overwritten if you automatically update.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="jquery-issues"&gt;jQuery issues&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Often breaks all the jQuery-affected elements on a page.&lt;/li&gt;
  &lt;li&gt;Check the console of the inspector for errors.&lt;/li&gt;
  &lt;li&gt;Common issue is more than one jQuery verison being loaded. Check for multiple copies in the source, or in the inspector’s scripts section.&lt;/li&gt;
  &lt;li&gt;When using jQuery, use the longform version (jQuery()) instead of the shorthand ($()) to avoid conflicts.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="upload-issues"&gt;Upload issues&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Write permissions may be wrong on the upload folder. &lt;em&gt;Lucas’ note: 755 should do the trick, according to the &lt;a href="http://codex.wordpress.org/Changing_File_Permissions"&gt;WordPress Codex&lt;/a&gt;&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;The server max upload size (set in php.ini) may be too small. By default it’s 8MB, but some hosts turn it down. Contact yours to see how to change it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="troubleshooting-bad-upgrades"&gt;Troubleshooting bad upgrades&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Reactivate the plugin. (Especially when uploaded with FTP).&lt;/li&gt;
  &lt;li&gt;Check for error messages, and &lt;em&gt;read&lt;/em&gt; them.&lt;/li&gt;
  &lt;li&gt;Revert to a previous version (you do have a backup, don’t you?).&lt;/li&gt;
  &lt;li&gt;Find previous version (if you don’t have a backup), by browsing the Trac page for the plugin (when on WordPress.org) and checking for tags, or showing revisions. &lt;em&gt;Lucas’ note: just make a backup regularly, it’ll save you so much hassle in the long run.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="bad-plugin-breakups"&gt;Bad plugin breakups&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;You may “break up” with a plugin when you find one that’s a better solution for your needs, or if what you’re using now provides unnecessary functionality.&lt;/li&gt;
  &lt;li&gt;The plugin development may have ended, and it may not support new versions of WordPress.&lt;/li&gt;
  &lt;li&gt;Make sure to analyse the effects of deactivation. Plugin authors rarely remember to include features which clean up after being uninstalled, so you may have to do this yourself.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
